---
const { modeInitial } = Astro.props;
---


<nav id="navigation" class="navigation bg-nvbg rounded-4xl text-txt p-4 fixed flex justify-center top-10 left-1/2 transform -translate-x-1/2 w-auto z-10 transition-all duration-300">
  <ul class="flex space-x-4">
    <li><a href="#about-me">About me</a></li>
    <li><a href="#experience">Experience</a></li>
    <li><a href="#skills">Skills</a></li>
    <li><a href="#certificates">Certificates</a></li>
    <li><a href="#projects">Projects</a></li>
    <li><a href="mailto:palacioluismauricio@gmail.com.com?subject=Contact%20from%20Portfolio&body=Hi,%20I%20saw%20your%20portfolio%20and%20would%20like%20to%20get%20in%20touch!">Contact</a></li>
  </ul>
</nav>

<div id="navigation-compact" class="top-1/2 transform -translate-y-1/2 w-auto fixed right-4 bg-nvbg text-navbartxt p-2 rounded shadow-lg z-10 transition-all duration-300 compact-hidden">
  <ul class="flex flex-col space-y-2">
    <li><a class="hover:text-2nd" href="#top" class="txt=txt">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" width="24" height="24" stroke-width="1.5">
        <path d="M12 5l0 14"></path>
        <path d="M16 9l-4 -4"></path>
        <path d="M8 9l4 -4"></path>
      </svg>
    </a></li>
    <li><a class="hover:text-2nd" href="#experience-section">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" width="24" height="24" stroke-width="1.5">
        <path d="M3 7m0 2a2 2 0 0 1 2 -2h14a2 2 0 0 1 2 2v9a2 2 0 0 1 -2 2h-14a2 2 0 0 1 -2 -2z"></path>
        <path d="M8 7v-2a2 2 0 0 1 2 -2h4a2 2 0 0 1 2 2v2"></path>
        <path d="M12 12l0 .01"></path>
        <path d="M3 13a20 20 0 0 0 18 0"></path>
      </svg>
    </a></li>
    <li><a class="hover:text-2nd" href="#about-me-section">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" width="24" height="24" stroke-width="1.5"> <path d="M8 7a4 4 0 1 0 8 0a4 4 0 0 0 -8 0"></path> <path d="M6 21v-2a4 4 0 0 1 4 -4h4a4 4 0 0 1 4 4v2"></path> </svg> 
    </a></li>
    <li><a class="hover:text-2nd" href="#skills-section">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" width="24" height="24" stroke-width="1.5">
        <path d="M5 4m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"></path>
        <path d="M9 4m0 1a1 1 0 0 1 1 -1h2a1 1 0 0 1 1 1v14a1 1 0 0 1 -1 1h-2a1 1 0 0 1 -1 -1z"></path>
        <path d="M5 8h4"></path>
        <path d="M9 16h4"></path>
        <path d="M13.803 4.56l2.184 -.53c.562 -.135 1.133 .19 1.282 .732l3.695 13.418a1.02 1.02 0 0 1 -.634 1.219l-.133 .041l-2.184 .53c-.562 .135 -1.133 -.19 -1.282 -.732l-3.695 -13.418a1.02 1.02 0 0 1 .634 -1.219l.133 -.041z"></path>
        <path d="M14 9l4 -1"></path>
        <path d="M16 16l3.923 -.98"></path>
      </svg>
    </a></li>
    <li><a class="hover:text-2nd" href="#certificates-section">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" width="24" height="24" stroke-width="1.5">
        <path d="M15 15m-3 0a3 3 0 1 0 6 0a3 3 0 1 0 -6 0"></path>
        <path d="M13 17.5v4.5l2 -1.5l2 1.5v-4.5"></path>
        <path d="M10 19h-5a2 2 0 0 1 -2 -2v-10c0 -1.1 .9 -2 2 -2h14a2 2 0 0 1 2 2v10a2 2 0 0 1 -1 1.73"></path>
        <path d="M6 9l12 0"></path>
        <path d="M6 12l3 0"></path>
        <path d="M6 15l2 0"></path>
      </svg>
    </a></li>
    <li><a class="hover:text-2nd" href="#projects-section">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" width="24" height="24" stroke-width="1.5">
        <path d="M7 8l-4 4l4 4"></path>
        <path d="M17 8l4 4l-4 4"></path>
        <path d="M14 4l-4 16"></path>
      </svg>
    </a></li>  
    <li><a class="hover:text-2nd" href="mailto:your-email@example.com?subject=Contact%20from%20Portfolio&body=Hi,%20I%20saw%20your%20portfolio%20and%20would%20like%20to%20get%20in%20touch!">
      <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-linecap="round" stroke-linejoin="round" width="24" height="24" stroke-width="1.5">
        <path d="M20 6v12a2 2 0 0 1 -2 2h-10a2 2 0 0 1 -2 -2v-12a2 2 0 0 1 2 -2h10a2 2 0 0 1 2 2z"></path>
        <path d="M10 16h6"></path>
        <path d="M13 11m-2 0a2 2 0 1 0 4 0a2 2 0 1 0 -4 0"></path>
        <path d="M4 8h3"></path>
        <path d="M4 12h3"></path>
        <path d="M4 16h3"></path>
      </svg>
    </a></li>
  </ul>
</div>

<script>
  // Wait for the DOM to fully load
  document.addEventListener("DOMContentLoaded", () => {
    const navigation = document.getElementById("navigation");
    const navigationCompact = document.getElementById("navigation-compact");
    const container = document.getElementById("container");

    if (!container || !navigation || !navigationCompact) {
      console.error("One or more elements not found:", { container, navigation, navigationCompact });
      return;
    }

    if(navigation.classList.contains("cv")){
      navigation.classList.add("hidden");
    }

    const observer = new MutationObserver(() => {
      if (container.classList.contains("cv")) {
        navigation.classList.add("hidden");
        navigationCompact.classList.add("hidden");
        navigationCompact.classList.add("compact-hidden");
      } else {
        navigation.classList.remove("hidden");
        navigationCompact.classList.add("hidden");
        navigationCompact.classList.add("compact-hidden");
      }
    });
    observer.observe(container, { attributes: true, attributeFilter: ["class"] });

    let lastScroll = 0;
    let timeoutId = null;

    window.addEventListener("scroll", () => {
      const currentScroll = window.scrollY;

      if (container.classList.contains("web")) {
        if (currentScroll > 150) {
          // Scrolling down past 100px: hide top nav, show compact nav
          navigation.classList.add("shrunk");
          setTimeout(() => {
            navigation.classList.add("hidden");
            navigationCompact.classList.remove("hidden");
            navigationCompact.classList.remove("compact-hidden");
          }, 500);
        } else if (currentScroll <= 150 && navigation.classList.contains("hidden")) {
          // Scrolling up to top (or near top): show top nav, hide compact nav
          navigationCompact.classList.add("compact-hidden");
          timeoutId = setTimeout(() => {
            navigationCompact.classList.add("hidden");
            navigation.classList.remove("shrunk");
            navigation.classList.remove("hidden");
          }, 500);
      }
    }
    });
  });
</script>

<style>
  .hidden {
    display: none;
  }
  .shrunk {
    transform: scale(0.1);
    opacity: 0;
  }
  .compact-hidden {
    transform: scale(0.1);
    opacity: 0;
  }
  #navigation-compact {
    width: auto;
    padding: 20px;
    transform-origin: right center;
  }
  .transition-all {
    transition: all 0.5s ease;
  }
  html {
    scroll-behavior: smooth;
  }
</style>