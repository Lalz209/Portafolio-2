---
const { modeInitial } = Astro.props;
---

<nav id="navigation" class="navigation bg-nvbg rounded-4xl text-txt p-4 fixed flex justify-center top-10 left-1/2 transform -translate-x-1/2 w-auto z-10 transition-all duration-300 hidden md:block">
  <ul class="flex space-x-4">
    <li><a href="#about-me">About me</a></li>
    <li><a href="#experience">Experience</a></li>
    <li><a href="#skills">Skills</a></li>
    <li><a href="#certificates">Certificates</a></li>
    <li><a href="#projects">Projects</a></li>
    <li><a href="mailto:palacioluismauricio@gmail.com.com?subject=Contact%20from%20Portfolio&body=Hi,%20I%20saw%20your%20portfolio%20and%20would%20like%20to%20get%20in%20touch!">Contact</a></li>
  </ul>
</nav>

<!-- Mobile Hamburger Button -->
<div id="mobile-menu-button" class="fixed top-4 right-4 z-50 bg-nvbg p-3 rounded-full shadow-lg md:hidden">
  <svg id="menu-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <line x1="3" y1="12" x2="21" y2="12"></line>
    <line x1="3" y1="6" x2="21" y2="6"></line>
    <line x1="3" y1="18" x2="21" y2="18"></line>
  </svg>
  <svg id="close-icon" xmlns="http://www.w3.org/2000/svg" width="24" height="24" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="hidden">
    <line x1="18" y1="6" x2="6" y2="18"></line>
    <line x1="6" y1="6" x2="18" y2="18"></line>
  </svg>
</div>

<!-- Mobile Menu -->
<div id="mobile-menu" class="fixed top-16 right-4 z-40 bg-nvbg rounded-lg shadow-xl w-48 overflow-hidden transform origin-top scale-y-0 transition-transform duration-300 ease-out md:hidden">
  <ul class="py-2">
    <li><a href="#about-me" class="block px-4 py-2 hover:bg-gray-700">About me</a></li>
    <li><a href="#experience" class="block px-4 py-2 hover:bg-gray-700">Experience</a></li>
    <li><a href="#skills" class="block px-4 py-2 hover:bg-gray-700">Skills</a></li>
    <li><a href="#certificates" class="block px-4 py-2 hover:bg-gray-700">Certificates</a></li>
    <li><a href="#projects" class="block px-4 py-2 hover:bg-gray-700">Projects</a></li>
    <li><a href="mailto:palacioluismauricio@gmail.com.com?subject=Contact%20from%20Portfolio&body=Hi,%20I%20saw%20your%20portfolio%20and%20would%20like%20to%20get%20in%20touch!" class="block px-4 py-2 hover:bg-gray-700">Contact</a></li>
  </ul>
</div>

<div id="navigation-compact" class="top-1/2 transform -translate-y-1/2 w-auto fixed right-4 bg-nvbg text-navbartxt p-2 rounded shadow-lg z-10 transition-all duration-300 compact-hidden hidden md:block">
  <!-- ... (tu código existente para la navegación compacta) ... -->
</div>

<script>
  document.addEventListener("DOMContentLoaded", () => {
    const navigation = document.getElementById("navigation");
    const navigationCompact = document.getElementById("navigation-compact");
    const container = document.getElementById("container");
    const mobileMenuButton = document.getElementById("mobile-menu-button");
    const mobileMenu = document.getElementById("mobile-menu");
    const menuIcon = document.getElementById("menu-icon")!;
    const closeIcon = document.getElementById("close-icon")!;

    if (!container || !navigation || !navigationCompact || !mobileMenuButton || !mobileMenu) {
      console.error("One or more elements not found");
      return;
    }

    // Toggle mobile menu
    mobileMenuButton.addEventListener("click", () => {
      const isOpen = mobileMenu.classList.contains("scale-y-100");
      
      if (isOpen) {
        mobileMenu.classList.remove("scale-y-100");
        mobileMenu.classList.add("scale-y-0");
        menuIcon.classList.remove("hidden");
        closeIcon.classList.add("hidden");
      } else {
        mobileMenu.classList.remove("scale-y-0");
        mobileMenu.classList.add("scale-y-100");
        menuIcon.classList.add("hidden");
        closeIcon.classList.remove("hidden");
      }
    });

    // Close mobile menu when clicking on a link
    document.querySelectorAll("#mobile-menu a").forEach(link => {
      link.addEventListener("click", () => {
        mobileMenu.classList.remove("scale-y-100");
        mobileMenu.classList.add("scale-y-0");
        menuIcon.classList.remove("hidden");
        closeIcon.classList.add("hidden");
      });
    });

    // Resto de tu código existente para el comportamiento de scroll...
    if(navigation.classList.contains("cv")){
      navigation.classList.add("hidden");
    }

    const observer = new MutationObserver(() => {
      if (container.classList.contains("cv")) {
        navigation.classList.add("hidden");
        navigationCompact.classList.add("hidden");
        navigationCompact.classList.add("compact-hidden");
        mobileMenuButton.classList.add("hidden");
        mobileMenu.classList.add("hidden");
      } else {
        navigation.classList.remove("hidden");
        navigationCompact.classList.add("hidden");
        navigationCompact.classList.add("compact-hidden");
        mobileMenuButton.classList.remove("hidden");
        mobileMenu.classList.remove("hidden");
      }
    });
    observer.observe(container, { attributes: true, attributeFilter: ["class"] });

    let lastScroll = 0;
    let timeoutId = null;

    window.addEventListener("scroll", () => {
      const currentScroll = window.scrollY;

      if (container.classList.contains("web")) {
        if (currentScroll > 150) {
          // Scrolling down past 100px: hide top nav, show compact nav
          navigation.classList.add("shrunk");
          setTimeout(() => {
            navigation.classList.add("hidden");
            navigationCompact.classList.remove("hidden");
            navigationCompact.classList.remove("compact-hidden");
          }, 500);
        } else if (currentScroll <= 150 && navigation.classList.contains("hidden")) {
          // Scrolling up to top (or near top): show top nav, hide compact nav
          navigationCompact.classList.add("compact-hidden");
          timeoutId = setTimeout(() => {
            navigationCompact.classList.add("hidden");
            navigation.classList.remove("shrunk");
            navigation.classList.remove("hidden");
          }, 500);
        }
      }
    });
  });
</script>

<style>
  .hidden {
    display: none;
  }
  .shrunk {
    transform: scale(0.1);
    opacity: 0;
  }
  .compact-hidden {
    transform: scale(0.1);
    opacity: 0;
  }
  #navigation-compact {
    width: auto;
    padding: 20px;
    transform-origin: right center;
  }
  .transition-all {
    transition: all 0.5s ease;
  }
  html {
    scroll-behavior: smooth;
  }
  
  /* Mobile menu styles */
  #mobile-menu-button {
    cursor: pointer;
    display: none;
  }
  
  #mobile-menu {
    display: none;
    max-height: calc(100vh - 80px);
    overflow-y: auto;
  }
  
  @media (max-width: 600px) {
    #mobile-menu-button {
      display: block;
    }
    
    #mobile-menu {
      display: block;
    }
    
    #navigation, #navigation-compact {
      display: none !important;
    }
  }
</style>